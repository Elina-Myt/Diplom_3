{"name": "Увеличение счетчика заказов за день", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSessionIdException: Message: WebDriver session does not exist, or is not active\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nInvalidSessionIDError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:448:5\nassert.that/<@chrome://remote/content/shared/webdriver/Assert.sys.mjs:515:13\nassert.session@chrome://remote/content/shared/webdriver/Assert.sys.mjs:37:4\ndespatch@chrome://remote/content/marionette/server.sys.mjs:315:19\nexecute@chrome://remote/content/marionette/server.sys.mjs:289:16\nonPacket/<@chrome://remote/content/marionette/server.sys.mjs:262:20\nonPacket@chrome://remote/content/marionette/server.sys.mjs:263:9\n_onJSONObjectReady/<@chrome://remote/content/marionette/transport.sys.mjs:494:20", "trace": "self = <tests.test_order_feed.TestOrderFeed object at 0x000001C62F725100>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"ca62928b-928c-45e9-a068-c5f97d669545\")>\nauthorize_user = None\n\n    @allure.title('Увеличение счетчика заказов за день')\n    def test_order_counter_by_day_increased(self, driver, authorize_user):\n        main_page = MainPage(driver)\n        login_page = LoginPage(driver)\n        feed_page = FeedPage(driver)\n    \n        driver.get(page_urls.BASE_URL)\n        main_page.wait_for_load_main_page()\n    \n        main_page.click_feed_button()\n        feed_page.wait_for_load_feed_page()\n        count_before = feed_page.get_count_of_orders_by_day()\n    \n        login_page.click_constructor_button()\n        main_page.wait_for_load_main_page()\n        ingredient = main_page.choose_ingredient()\n        main_page.add_ingredient(ingredient)\n        main_page.click_order_button()\n>       main_page.wait_create_order()\n\ntests\\test_order_feed.py:91: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\main_page.py:94: in wait_create_order\n    order_number = self.find_element_with_wait(MainPageLocators.ORDER_NUMBER).text\npages\\base_page.py:13: in find_element_with_wait\n    WebDriverWait(self.driver, 50).until(expected_conditions.visibility_of_element_located(locator))\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:156: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001C62F6E3320>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"invalid session id\",\"message\":\"WebDriver session does not exist, or is no...ionette/server.sys.mjs:263:9\\\\n_onJSONObjectReady/<@chrome://remote/content/marionette/transport.sys.mjs:494:20\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSessionIdException: Message: WebDriver session does not exist, or is not active\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       InvalidSessionIDError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:448:5\nE       assert.that/<@chrome://remote/content/shared/webdriver/Assert.sys.mjs:515:13\nE       assert.session@chrome://remote/content/shared/webdriver/Assert.sys.mjs:37:4\nE       despatch@chrome://remote/content/marionette/server.sys.mjs:315:19\nE       execute@chrome://remote/content/marionette/server.sys.mjs:289:16\nE       onPacket/<@chrome://remote/content/marionette/server.sys.mjs:262:20\nE       onPacket@chrome://remote/content/marionette/server.sys.mjs:263:9\nE       _onJSONObjectReady/<@chrome://remote/content/marionette/transport.sys.mjs:494:20\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: InvalidSessionIdException"}, "steps": [{"name": "Ожидание загрузки главной страницы", "status": "passed", "steps": [{"name": "Ожидаем изменения адреса страницы", "status": "passed", "parameters": [{"name": "url", "value": "'https://stellarburgers.nomoreparties.site/'"}], "start": 1728660450830, "stop": 1728660450831}], "start": 1728660450830, "stop": 1728660451350}, {"name": "Кликаем кнопку \"Лента заказов\"", "status": "passed", "start": 1728660451350, "stop": 1728660451589}, {"name": "Ожидаем загрузки страницы \"Лента заказов\"", "status": "passed", "steps": [{"name": "Ожидаем изменения адреса страницы", "status": "passed", "parameters": [{"name": "url", "value": "'https://stellarburgers.nomoreparties.site/feed'"}], "start": 1728660451589, "stop": 1728660451591}], "start": 1728660451589, "stop": 1728660451591}, {"name": "Получаем количество заказов за сегодня", "status": "passed", "start": 1728660451591, "stop": 1728660452131}, {"name": "Кликнуть кнопку \"Конструктор\"", "status": "passed", "start": 1728660452131, "stop": 1728660452397}, {"name": "Ожидание загрузки главной страницы", "status": "passed", "steps": [{"name": "Ожидаем изменения адреса страницы", "status": "passed", "parameters": [{"name": "url", "value": "'https://stellarburgers.nomoreparties.site/'"}], "start": 1728660452397, "stop": 1728660452399}], "start": 1728660452397, "stop": 1728660452412}, {"name": "Выбор ингредиента из списка", "status": "passed", "start": 1728660452412, "stop": 1728660452414}, {"name": "Добавление ингредиента в заказ", "status": "passed", "steps": [{"name": "Перетаскиваем элемент на элемент", "status": "passed", "parameters": [{"name": "source", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"ca62928b-928c-45e9-a068-c5f97d669545\", element=\"a4165787-8d52-48d4-a480-358662b5fca3\")>"}, {"name": "target", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"ca62928b-928c-45e9-a068-c5f97d669545\", element=\"1bab8420-79a1-4b24-8e39-28e1cb6c9f06\")>"}], "start": 1728660452427, "stop": 1728660452999}], "parameters": [{"name": "ingredient", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"ca62928b-928c-45e9-a068-c5f97d669545\", element=\"a4165787-8d52-48d4-a480-358662b5fca3\")>"}], "start": 1728660452414, "stop": 1728660452999}, {"name": "Кликнуть кнопку \"Оформить заказ\"", "status": "passed", "start": 1728660452999, "stop": 1728660453239}, {"name": "Ожидание обновления номера заказа", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSessionIdException: Message: WebDriver session does not exist, or is not active\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nInvalidSessionIDError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:448:5\nassert.that/<@chrome://remote/content/shared/webdriver/Assert.sys.mjs:515:13\nassert.session@chrome://remote/content/shared/webdriver/Assert.sys.mjs:37:4\ndespatch@chrome://remote/content/marionette/server.sys.mjs:315:19\nexecute@chrome://remote/content/marionette/server.sys.mjs:289:16\nonPacket/<@chrome://remote/content/marionette/server.sys.mjs:262:20\nonPacket@chrome://remote/content/marionette/server.sys.mjs:263:9\n_onJSONObjectReady/<@chrome://remote/content/marionette/transport.sys.mjs:494:20\n\n", "trace": "  File \"C:\\Users\\ramms\\PycharmProjects\\Diplom\\Diplom_3\\Diplom_3\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\ramms\\PycharmProjects\\Diplom\\Diplom_3\\Diplom_3\\pages\\main_page.py\", line 94, in wait_create_order\n    order_number = self.find_element_with_wait(MainPageLocators.ORDER_NUMBER).text\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\ramms\\PycharmProjects\\Diplom\\Diplom_3\\Diplom_3\\pages\\base_page.py\", line 13, in find_element_with_wait\n    WebDriverWait(self.driver, 50).until(expected_conditions.visibility_of_element_located(locator))\n  File \"C:\\Users\\ramms\\PycharmProjects\\Diplom\\Diplom_3\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\ramms\\PycharmProjects\\Diplom\\Diplom_3\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 156, in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\ramms\\PycharmProjects\\Diplom\\Diplom_3\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 741, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\ramms\\PycharmProjects\\Diplom\\Diplom_3\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\ramms\\PycharmProjects\\Diplom\\Diplom_3\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1728660453239, "stop": 1728660479840}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1728660450662, "stop": 1728660479844, "uuid": "80784b22-9980-450d-bc60-8afc4ea295a9", "historyId": "734137f6dd5088021ceb1b2fc1ae1026", "testCaseId": "bdbb4d5b1ccaf5a4d2d671777c13be62", "fullName": "tests.test_order_feed.TestOrderFeed#test_order_counter_by_day_increased", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_feed"}, {"name": "subSuite", "value": "TestOrderFeed"}, {"name": "host", "value": "LAPTOP-E8K2POSI"}, {"name": "thread", "value": "4832-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_feed"}]}